type User @model 
@auth(rules: [
  { allow: private, provider: iam },
  { allow: owner }
]){
  id: ID!
  firstName: String!
  lastName: String!
  age: Int
  profileImageURL: String
  profileImage: S3Object
  device: Device @connection
  facility: String
  phoneNumber: String
  email: String
  address: Address
  emergencyContacts: [Contact]  
  additionalNotes: String
}

type S3Object 
@auth(rules: [
  { allow: private, provider: iam },
  { allow: owner }
]){
  bucket: String!
  region: String!
  key: String!
}

type Device @model
@auth(rules: [
  { allow: private, provider: iam },
  { allow: owner }
]) {
  id: ID!
  userID: ID
  deviceOS: String
  osVersion: String
  deviceStatus: String 
  alerts: [Alert] @connection(keyName: "byDevice", fields: ["id"])
  geofence: Location @connection
  data: [DeviceData] @connection(keyName: "byDevice", fields: ["id"])
}

type Location @model 
@key(name: "byLocationName", fields: ["locationName"])
@auth(rules: [
  { allow: private, provider: iam },
  { allow: owner }
]) {
  id: ID!
  locationName: String!
  boundary: [LatLon!]!
}

type Alert @model (subscriptions: { level: public })
@key(name: "byDevice", fields: ["deviceID", "createdAt"])
@auth(rules: [
  { allow: private, provider: iam },
  { allow: owner }
]) {
  id: ID!
  deviceID: ID!
  type: String!
  description: String!
  location: LatLon
  createdAt: AWSDateTime!
  expirationTime: Int!
}

type DeviceData @model
@key(name: "byDevice", fields: ["deviceID", "createdAt"])
@key(name: "byDeviceAndObservationType", fields: ["deviceID", "observationType", "createdAt"])
@auth(rules: [
  { allow: private, provider: iam },
  { allow: owner }
]) {
  id: ID!
  deviceID: ID!
  device: Device @connection(fields: ["deviceID"])
  location: LatLon
  observationType: String
  observationUnit: String
  observationValue: String
  observationDescription: String
  createdAt: String!
  expirationTime: Int!
}


type LatLon
@auth(rules: [
  { allow: private, provider: iam },
  { allow: owner }
]) {
  lat: Float!
  lng: Float!
}

type Contact
@auth(rules: [
  { allow: private, provider: iam },
  { allow: owner }
]) {
  firstName: String!
  lastName: String!
  relationshipToUser: String
  phoneNumber: String
  email: String
  address: Address
}


type Address
@auth(rules: [
  { allow: private, provider: iam },
  { allow: owner }
]) {
  streetAddress: String
  city: String
  stateProvince: String
  country: String
  postalZip: String
}

