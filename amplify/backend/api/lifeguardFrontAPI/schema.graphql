type User @model {
  id: ID!
  firstName: String!
  lastName: String!
  profileURL: String!
  age: Int
  device: Device @connection(name: "RegisteredDevice")
  assignedGeofencing: [Geofence] @connection(name: "AssignedGeofencing")
  profileImageURL: String
  vitals: VitalStats @connection(name: "Vitals")
  facility: String
  room: String
  phoneNumber: String
  email: String
  emergencyContacts: [EmergencyContact] @connection(name: "EmergencyContacts") 
  careGivers: [CareGiver] @connection(name: "CareGivers")
  address: Address @connection(name: "PrimaryAddress")
  healthNotes: String
}

type Device @model {
  id: ID!
  deviceSerial: String
  deviceStatus: String
  registeredUser: User @connection(name: "AssociatedUser") 
  currentLocation: [String]
}

type VitalStats @model {
  id: ID!
  heartRate: Int
}

type Geofence @model {
  id: ID!
  locationName: String
  perimeterCoordinates: [String] 
}

type EmergencyContact @model {
  id: ID!
  firstName: String!
  lastName: String!
  user: User @connection(name: "User")
  relationshipToUser: String
  phoneNumber: String
  email: String
  address: [Address] @connection(name: "PrimaryAddress")
}

type CareGiver @model {
  id: ID!
  firstName: String!
  lastName: String!
  user: User @connection(name: "User")
  relationshipToUser: String
  phoneNumber: String
  email: String
  address: [Address] @connection(name: "PrimaryAddress")
}

type Address @model {
  id: ID!
  streetAddress: String
  city: String
  stateProvince: String
  country: String
  postalZip: String
}
