type User @model
@key(name: "usersByDevice", fields: ["deviceID"], queryField: "usersByDevice") {
  id: ID!
  firstName: String!
  lastName: String!
  profileURL: String!
  profileImageURL: String
  room: String
  age: Int
  deviceID: ID
  device: Device @connection
  assignedGeofencing: [UserGeo] @connection(keyName: "byUser", fields: ["id"])
  facility: String
  phoneNumber: String
  email: String
  emergencyContacts: [Contact] @connection 
  careGivers: [Contact] @connection
  address: Address @connection
  additionalNotes: String
}

type Device @model {
  id: ID!
  userID: ID!
  associatedUser: User @connection(fields: ["userID"])
  deviceSerial: String
  deviceStatus: String 
  currentLocation: [String]
  data: [DeviceData] @connection
}

type DeviceData @model
@key(fields: ["deviceID", "createdAt"]) {
  id: ID!
  deviceID: ID!
  device: Device @connection(fields: ["deviceID"])
  location: [String]
  heartRate: Int
  createdAt: String!
}

type Geofence @model {
  id: ID!
  locationName: String
  perimeterCoordinates: [String]
  users: [UserGeo] @connection(keyName: "byGeofence", fields: ["id"]) 
}

type UserGeo @model
@key(name: "byUser", fields: ["userID", "geofenceID"])
@key(name: "byGeofence", fields: ["geofenceID", "userID"]) {
  id: ID!
  userID: ID!
  geofenceID: ID!
  user: User! @connection(fields: ["userID"])
  geofence: Geofence! @connection(fields: ["geofenceID"])
}

type Contact @model {
  id: ID!
  firstName: String!
  lastName: String!
  userID: ID!
  user: User @connection(fields: ["userID"])
  relationshipToUser: String
  phoneNumber: String
  email: String
  address: Address @connection
}


type Address @model {
  id: ID!
  streetAddress: String
  city: String
  stateProvince: String
  country: String
  postalZip: String
}
